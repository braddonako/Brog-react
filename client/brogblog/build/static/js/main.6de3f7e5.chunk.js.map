{"version":3,"sources":["Components/utils/button.js","Components/utils/Forms/formfield.js","Components/utils/Forms/formActions.js","actions/user_actions.js","actions/types.js","Components/utils/misc.js","Components/Register_login/login.js","Components/Register_login/index.js","Components/Home/index.js","Components/Header_footer/Header/newHeader.js","Components/Header_footer/Footer/index.js","hoc/layout.js","hoc/auth.js","Components/About/index.js","Components/Register_login/register.js","Components/Posts/index.js","hoc/user.js","actions/post_actions.js","Components/User/Admin/add_post.js","Components/Posts/showPost.js","Components/Logout/logout.js","Components/User/index.js","routes.js","reducers/index.js","reducers/user_reducer.js","reducers/post_reducer.js","index.js"],"names":["MyButton","props","className","template","type","to","linkTo","addStyles","title","buttons","Formfield","formdata","change","id","showError","errorMessage","validation","valid","validationMessage","formTemplate","element","showlabel","config","label","value","onBlur","event","blur","onChange","renderTemplate","update","formName","newFormdata","newElement","target","validData","error","email","test","message","confirm","trim","required","validate","touched","generateData","dataToSubmit","key","isFormValid","formIsValid","registerUser","payload","axios","post","then","response","data","loginUser","auth","get","logoutUser","Login","state","formError","formSuccess","name","placeholder","password","updateForm","setState","submitForm","preventDefault","dispatch","loginSuccess","console","log","history","push","onSubmit","this","onClick","Component","connect","withRouter","RegisterLogin","margin","Home","getAllArticles","Axios","mostRecentPost","_id","body","date","Header","page","public","user","logoutHandler","success","defaultLink","item","i","showLinks","list","userData","forEach","isAuth","map","Footer","icon","faCompass","href","faLinkedinIn","faGithub","faEnvelope","Layout","children","ComposedClass","reload","adminRoute","AuthenticationCheck","loading","isAdmin","CircularProgress","style","color","thickness","mapStateToProps","About","Register","lastname","confirmPassword","setTimeout","catch","e","Dialog","open","AllPosts","articlePosts","showAllPosts","links","admin","generateLinks","addPost","datatoSubmit","AddPost","showLabel","image","article","showPost","Logout","Carousel","Item","src","alt","Caption","UserDashboard","Routes","path","exact","component","Auth","rootReducer","combineReducers","action","register","getAllPosts","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","store","Reducer","window","__REDUX_DEVTOOLS_EXTENSION__","document","getElementById"],"mappings":"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","file":"static/js/main.6de3f7e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst MyButton = (props) => {\n\n    const buttons = () => {\n        let template = '';\n        \n        switch(props.type){\n            case \"default\":\n                template= <Link\n                    className='link_default'\n                    to={props.linkTo}\n                    {...props.addStyles}\n                >\n                    {props.title}\n                </Link>                \n            break;\n            default: \n                template=''\n        }\n\n        return template;\n    }\n\n    return (\n        <div className='my_link'> \n            {buttons()}\n        </div>\n    );\n};\n\nexport default MyButton;","import React from 'react';\n\nconst Formfield = ({formdata, change, id}) => {\n\n\n    const showError = () => {\n        let errorMessage = null;\n\n        if(formdata.validation && !formdata.valid){\n            errorMessage = (\n                <div className=\"error_label\">\n                    {formdata.validationMessage}\n                </div>\n            )\n        }\n\n        return errorMessage;\n    }\n\n\n    const renderTemplate = () => {\n        let formTemplate = null;\n\n        switch(formdata.element){\n            case('input'):\n                formTemplate = (\n                    <div className=\"formBlock\" type='submit'>\n                        {formdata.showlabel? \n                        <div className='label_inputs'>\n                            {formdata.config.label}\n                        </div>  \n                        :null  \n                    }\n                        <input\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event)=> change({event,id,blur:true})}\n                            onChange={(event)=> change({event,id}) }\n                        />\n                        {showError()}\n                    </div>\n                )\n            break;\n            case('textarea'):\n            formTemplate = (\n                    <div className=\"formBlock\">\n                        {formdata.showlabel? \n                        <div className='label_inputs'>\n                            {formdata.config.label}\n                        </div>  \n                        :null }\n                        <textarea\n                            {...formdata.config}\n                            value={formdata.value}\n                            onBlur={(event)=> change({event,id,blur:true})}\n                            onChange={(event)=> change({event,id}) }\n                        />\n                        {showError()}\n                    </div>\n            )\n            break;\n            default:\n                formTemplate = null;\n        }\n\n        return formTemplate;\n    }\n\n\n    return (\n        <div>\n            {renderTemplate()}\n        </div>\n    );\n};\n\nexport default Formfield;","export const validate = (element, formdata= []) => {\n    let error = [true,''];\n\n\n    if(element.validation.email){\n        const valid = /\\S+@\\S+\\.\\S+/.test(element.value)\n        const message = `${!valid ? 'Must be a valid email':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    if(element.validation.confirm){\n        const valid = element.value.trim() === formdata[element.validation.confirm].value;\n        const message = `${!valid ? 'Passwords do not match':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    if(element.validation.required){\n        const valid = element.value.trim() !== '';\n        const message = `${!valid ? 'This field is required':''}`;\n        error = !valid ? [valid,message] : error;\n    }\n\n    return error\n}\n\nexport const update = (element, formdata, formName ) => {\n    const newFormdata = {\n        ...formdata\n    }\n    const newElement = {\n        ...newFormdata[element.id]\n    }\n\n    newElement.value = element.event.target.value;\n\n    if(element.blur){\n        let validData = validate(newElement,formdata);\n        newElement.valid = validData[0];\n        newElement.validationMessage = validData[1];\n    }\n\n    newElement.touched = element.blur;\n    newFormdata[element.id] = newElement;\n\n    return newFormdata;\n}\n\nexport const generateData = (formdata, formName) =>{\n    let dataToSubmit = {};\n\n\n\n    for(let key in formdata){\n        if (key!== 'confirmPassword'){\n            dataToSubmit[key] = formdata[key].value;\n        }\n        \n    }\n\n    return dataToSubmit;\n}\n\nexport const isFormValid = (formdata, formName) => {\n    let formIsValid = true;\n\n    for(let key in formdata){\n        formIsValid = formdata[key].valid && formIsValid\n    }\n    return formIsValid;\n\n}\n\n\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER\n} from './types';\n\nimport { USER_SERVER } from '../Components/utils/misc';\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`, dataToSubmit)\n        .then(response => response.data);\n        return {\n            type: REGISTER_USER,\n            payload: request\n        }\n}\n\nexport function loginUser(dataToSubmit){\n\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return{\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n\n}","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER =  'auth_user';\nexport const SHOW_ALL_ARTICLES = 'show_all_articles'\nexport const LOGOUT_USER = 'logout_user';\nexport const ADD_POST = 'add_post';\nexport const GET_ALL_POSTS = 'get_all_posts'\n\n// just trying to see if my repository is linked up","// server routes\nexport const USER_SERVER = '/api/users';\nexport const ARTICLES_SERVER = '/api/articles';","import React, { Component } from 'react';\nimport FormField from '../utils/Forms/formfield';\nimport { update, generateData, isFormValid } from '../utils/Forms/formActions';\nimport { withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../actions/user_actions';\n\nclass Login extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:'',\n        formdata:{\n            email: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Enter your email'\n                },\n                validation:{\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            password: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'password_input',\n                    type: 'password',\n                    placeholder: 'Enter your password'\n                },\n                validation:{\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'login');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'login');\n        let formIsValid = isFormValid(this.state.formdata,'login')    \n\n        if(formIsValid){\n            this.props.dispatch(loginUser(dataToSubmit)).then(response =>{\n                if(response.payload.loginSuccess){\n                    console.log(response.payload);\n                    this.props.history.push('/user/dashboard')\n                }else{\n                    this.setState({\n                        formError: true\n                    })\n                }\n            });\n\n        } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n\n    render() {\n        return (\n            <div className=\"signin_wrapper\">\n                <form onSubmit={(event)=> this.submitForm(event)}>\n\n                    <FormField\n                        id={'email'}\n                        formdata={this.state.formdata.email}\n                        change={(element)=> this.updateForm(element)}\n                    />\n\n                    <FormField\n                        id={'password'}\n                        formdata={this.state.formdata.password}\n                        change={(element)=> this.updateForm(element)}\n                    />\n\n                    { this.state.formError ?\n                        <div className=\"error_label\">\n                            Username or Password is incorrect\n                        </div>\n                    :null}\n                    <button type='button' onClick={(event)=> this.submitForm(event)}>\n                        Log in\n                    </button>\n\n\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(Login));","import React from 'react';\nimport MyButton from '../utils/button';\nimport Login from './login';\n\nconst RegisterLogin = () => {\n    return (\n        <div className=\"page_wrapper\">\n            <div className=\"container\">\n                <div className=\"register_login_container\">\n                    <div className=\"left\">\n                        <h1>Register</h1>\n                        <p>Welcome to the Brog!If you haven't signed up yet, here is your chance.By signing up, I will not bombard you with emails, unless you ask me to. </p>\n                        <MyButton\n                            type=\"default\"\n                            title=\"Create an account\"\n                            linkTo=\"/register\"\n                            addStyles={{\n                                margin:'10px 0 0 0'\n                            }}\n                        />\n                    </div>\n                    <div className=\"right\">\n                        <h2>Welcome back!</h2>\n                        <p>If you have an account please log in.</p>\n                        <Login/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default RegisterLogin;","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass Home extends Component {\n\n    constructor(){\n        super();\n        this.state= {\n            mostRecentPost:[]\n        }\n    }\n\n    componentDidMount(){\n        this.getAllArticles();\n    }\n\n    getAllArticles = () =>{\n        // We are fetching the most recent post here to display it on the home page\n        Axios.get('/api/articles/showMostRecent').then(response => {\n            // console.log(response)\n            this.setState({\n                mostRecentPost: response.data\n            })\n        })\n    }\n    \n    render() {\n\n        return(\n            <div>\n                <div>\n                    <h1 className='welcome'>Welcome to da BROG</h1>\n                    <p className='welcomeSub'>All about Coding Bootcamps && JavaScript </p>\n                </div>\n                <div className = 'page_wrapper_home'\n                key = {this.state.mostRecentPost._id}>\n                    <div className='container'>\n                        <div className='homeContainer'>                            \n                            <div>\n                                <h1 className='postTitle'>{this.state.mostRecentPost.title}</h1>\n                                <p className='postBody'>\n                                    {this.state.mostRecentPost.body}\n                                </p>\n                                {/* <button className='buttonPost'  type='button' onClick={(event)=> this.submitForm(event)}>\n                                        Click to see comments\n                                </button> */}\n                                \n                            </div>\n                            <div className='datePosted'>\n                                Date Posted: {this.state.mostRecentPost.date}\n                            </div>                           \n                        </div>\n                    </div>\n                </div>\n            </div>  \n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport { Link, withRouter} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../../actions/user_actions';\n\nclass Header extends Component {\n\n    state = {\n        page:[\n            {\n                name:'Home',\n                linkTo:'/',\n                public: true\n            },\n            {\n                name:'Posts',\n                linkTo:'/posts',\n                public: false\n            },\n            {\n                name: 'About',\n                linkTo: '/about',\n                public: true\n            }\n        ],\n        user:[\n            {\n                name:'My Account',\n                linkTo:'/user/dashboard',\n                public: false\n            },\n            {\n                name:'Log in',\n                linkTo:'/register_login',\n                public: true\n            },\n            {\n                name:'Log out',\n                linkTo:'/user/logout',\n                public: false\n            },\n        ]\n    }\n\n    logoutHandler = () =>{\n        this.props.dispatch(logoutUser()).then(response => {\n            if(response.payload.success){\n                this.props.history.push('/logout')\n            }\n        })\n    }\n\n\n    defaultLink = (item,i) => (\n        item.name === 'Log out' ?\n            <div className=\"log_out_link\"\n                key={i}\n                onClick={()=> this.logoutHandler()}\n            >\n                {item.name}\n            </div>\n\n        :\n        <Link to={item.linkTo} key={i}>\n            {item.name}\n        </Link>\n    )\n\n\n    showLinks = (type) =>{\n        let list = [];\n\n        if(this.props.user.userData){\n            type.forEach((item)=>{\n                if(!this.props.user.userData.isAuth){\n                    if(item.public === true){\n                        list.push(item)\n                    }\n                } else{\n                    if(item.name !== 'Log in'){\n                        list.push(item)\n                    }\n                }\n            });\n        }\n\n        return list.map((item,i)=>{\n                return this.defaultLink(item,i)          \n        })\n    }\n\n\n    render() {\n        return (\n            <header>\n                <div className=\"container\">\n                     <div className=\"left\">\n                         <div className=\"logo\">\n                             the BROG\n                         </div>\n                         <div className='header_logo_title'>AKA Brads Blog</div>                     \n                     </div>\n                     <div className=\"right\">\n                         <div className=\"top\">\n                             {this.showLinks(this.state.user)}\n                         </div>\n                         <div className=\"bottom\">\n                             {this.showLinks(this.state.page)}\n                         </div>\n                     </div>\n               </div>\n            </header>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Header));","import React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faCompass} from '@fortawesome/fontawesome-free-solid';\nimport {faGithub} from '@fortawesome/free-brands-svg-icons';\nimport {faEnvelope} from '@fortawesome/fontawesome-free-solid';\nimport {faLinkedinIn} from '@fortawesome/free-brands-svg-icons';\n\nconst Footer = () => {\n    return (\n        <footer className='footerBackgroundColor'>\n            <div className='container'>\n                <div className='logo'>\n                    the BROG\n                </div>\n                <div className='wrapper'>\n                    <div className='left'>\n                        <h2>Contact Information</h2>\n                            <div className='business_nfo'>\n                                <div className='tag'>\n                                    <FontAwesomeIcon \n                                    icon={faCompass}\n                                    className='icon'\n                                    />\n                                    <div className='nfo'>\n                                        <div>Location</div>\n                                        <div>Denver, CO</div>\n                                    </div>\n                                </div>\n\n                            <div className='tag'>\n                                <a href = 'https://www.linkedin.com/in/braddonakowski/' >\n                                    <FontAwesomeIcon \n                                    icon={faLinkedinIn}\n                                    className='icon'\n                                    />\n                                </a>\n                                <div className='nfo'>\n                                    <div>Click the logo to</div>\n                                    <div>Connect with me on LinkedIn</div>\n                                </div>\n                            </div>\n\n                            <div className='tag'>\n                                <a href='https://www.github.com/braddonako' >\n                                    <FontAwesomeIcon \n                                    icon={faGithub}\n                                    className='icon'\n                                    />\n                                </a>\n                                <div className='nfo'>\n                                    <div>Click the logo to</div>\n                                    <div>access my Github</div>\n                                </div>\n                            </div>\n                            \n                            <div className='tag'>\n                                    <FontAwesomeIcon \n                                    icon={faEnvelope}\n                                    className='icon'\n                                    />\n                                <div className='nfo'>\n                                    <div>Email</div>\n                                    <div>braddonakowski@yahoo.com</div>\n                                </div>\n                            </div>\n                        </div>     \n\n                    </div>\n                    <div className='left'>\n                        <h2>Share your thoughts</h2>\n                        <div>\n                            <div>I love receiving feedback, and am always open to suggestions. If you have a topic you would like me to discuss, just want to chat, or you want to grab a cup of coffee (aka 'fee) shoot me a message!</div>\n                        </div>\n                    </div>\n                    \n                </div>\n\n            </div>\n            \n        </footer>\n    );\n};\n\nexport default Footer;","import React, { Component } from 'react';\nimport NewHeader from '../Components/Header_footer/Header/newHeader'\nimport Footer from '../Components/Header_footer/Footer'\n\nclass Layout extends Component {\n    \n\n    render() {\n        return (\n            <div>\n                <NewHeader/>\n                <div className='page_container'>\n                    {this.props.children}\n                </div>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {auth} from '../actions/user_actions';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nexport default function(ComposedClass, reload, adminRoute = null){\n\n\n    class AuthenticationCheck extends Component {\n\n        state = {\n            loading: false\n        }\n\n      componentDidMount() {\n          this.props.dispatch(auth()).then(response => {\n              let user = this.props.user.userData;\n            //   console.log(user);\n\n              if (!user.isAuth) {\n                  if (reload) {\n                      this.props.history.push('/register_login')\n                  }\n              } else {\n                  if (adminRoute && !user.isAdmin) {\n                      this.props.history.push('/user/dashboard')\n                  } else {\n                      if (reload === false) {\n                          this.props.history.push('/user/dashboard')\n                      }\n                  }\n              }\n              this.setState({\n                  loading: false\n              })\n          })\n      }\n\n        render() {\n            if (this.state.loading){\n                return(\n                    <div className='main_loader'>\n                        <CircularProgress style={{color: '#2196F3'}} thickness={7}/>\n                    </div>\n                )\n            }\n            return (\n                <div>\n                    <ComposedClass {...this.props} user={this.props.user}/>\n                </div>\n            );\n        }\n    }\n\n    function mapStateToProps(state){\n        return {\n            user: state.user\n        }\n    }\n\n    return connect(mapStateToProps)(AuthenticationCheck);\n}","import React from 'react';\n\nconst About = () => {\n    return (\n        <div className='page_wrapper'>\n            <div className='container'>\n                <h1 className='brogAbout'>So, what is THE BROG all about?</h1>\n                <p className='aboutFont'> \n                    Well, I am going to tell you right now. But first, I'm going to set the record straight... I am not a writer. Realistically, I should probably start doing a podcast or some shit cause I love to talk. Especially about technology. ** Note on language -- I will sometimes be using 'bad words'. This is my blog, I want to connect with people that want to get the authentic me. **  But yes, talking about technology is one of the many reasons I wanted to create a blog about JavaScript, my coding bootcamp experience, and how MY career change is going. Whenever I talk to my friends about programming, they have no flippin idea what I am talking about. And quite frankly, that stinks. I just want to tell someone about all the cool new tricks and tips that I am learning, and receive a response from them other than 'I don’t know what the hell you are talking about.’  So ya, that is a reason I really want to do this. If I can help one person out that is currently learning how to code, or wants to make a career change, then this was a huge success.  \n                </p>\n                <h2 className='brogAboutMe'>About me</h2>\n                <p className='aboutFont'>\n                    I'm Brad Donakowski, and I live in Denver, CO, born and raised. Currently, I am looking for a new role in Software Development. I finished a bootcamp in December of 2019. I can give you a quick rundown of my career so far, so you have an idea of why I decided to make the career change into software development. Soooo, During college I really had no idea what I wanted to do. Even post college, I still didn't Know. <strong>UNTIL</strong> I was introduced to coding. I really wish I knew that I enjoyed software development this much while I was attending college.. but, Oh well. It was all a great experience and having a degree in Management, could be very helpful since I would love to lead a team someday. Anyway, I graduated from University of Northern Colorado during the Summer of 2017 with a degree in Business Management. I broke my knee shortly after, (Long story short, a golf cart flipped on me). I then got my first job out of school as an Account Manager with a company by the name of Apex Systems.  Apex Systems introduced me to the crazy world of tech. At first I had no idea what back-end and front-end development was or 'full stack' development, I didn't know there was a difference between JavaScript and Java. I was a complete noob when it came to tech, so I wanted to learn more about this just because it sounded really cool. I began to teach myself the basics with HTML and CSS, and I thought it was badass to see how a webpage is really made. I left Apex on April Fools day, what a weird day to quit, huh? But as I was saying, I left Apex to enroll in a coding bootcamp that was starting soon. At this point, I had been thinking about attending a bootcamp for about 8 months. It was such a huge decision because I felt there was a lot of uncertainty, mixed reviews, etc. I wanted to make sure I made the best choice for myself, so I took my time to make my think about it. Of course, sometimes, things don't go as planned, and I got a call from a startup a week after I quit Apex. This startup was called Pax8, and they sold a variety of software products. I could not turn this opportunity down, because I have always wanted to be a part of a startup. Working there was great, but I realized I was in the wrong role, and still had the gut feeling I needed to pursue software development. After a short stint with Pax8, which was an incredible opportunity, I finally took a leap of faith, and enrolled in the bootcamp. It was one of the best decision and one of the greatest experiences I have had in my life. For now, that is all you need to know about me. You will learn quite a bit through my posts! Thanks and I appreciate you checking out the BROG.\n                </p>\n                 \n            </div>\n            \n        </div>\n    );\n};\n\nexport default About;","import React, { Component } from 'react';\nimport FormField from '../utils/Forms/formfield';\nimport { update, generateData, isFormValid } from '../utils/Forms/formActions';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../actions/user_actions';\nimport Dialog from '@material-ui/core/Dialog'\n\nclass Register extends Component {\n\n    state = {\n        formError: false,\n        formSuccess:false,\n        formdata:{\n             name: {\n                element: 'input',\n                value: '',\n                config:{\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'First Name'\n                },\n                validation:{\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage:''\n            },\n            lastname: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'lastname_input',\n                    type: 'text',\n                    placeholder: 'Last Name'\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: ''\n            },\n            email: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'email_input',\n                    type: 'email',\n                    placeholder: 'Email'\n                },\n                validation: {\n                    required: true,\n                    email: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage: ''\n            },\n            password: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'password_input',\n                    type: 'password',\n                    placeholder: 'Password'\n                },\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false,\n                validationMessage: ''\n            }, \n            confirmPassword: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'confirm_password_input',\n                    type: 'password',\n                    placeholder: 'Confirm password'\n                },\n                validation: {\n                    required: true,\n                    confirm: 'password'\n                },\n                valid: false,\n                touched: false,\n                validationMessage: ''\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'register');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n\n\n    submitForm= (event) =>{\n        event.preventDefault();\n        \n        let dataToSubmit = generateData(this.state.formdata,'register');\n        let formIsValid = isFormValid(this.state.formdata,'register')\n\n        if(formIsValid){\n            this.props.dispatch(registerUser(dataToSubmit))\n            .then(response => {\n                if (response.payload.success){\n                    this.setState({\n                        formError: false,\n                        formSuccess: true\n                    });\n                    setTimeout(() => {\n                            this.props.history.push('/register_login')\n                    }, 3000);\n                } else{\n                    this.setState({formError: true})\n                }\n            }).catch(e=>{\n                this.setState({\n                    formError: true\n                })\n            })\n            } else {\n            this.setState({\n                formError: true\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className='page_wrapper'>\n                <div className='container'>\n                    <div className='register_login_container'>\n                        <div className='left'>\n                            <form onSubmit={(event) => this.submitForm(event)}>\n                                <h2>Personal Information</h2>\n                                <div className='form_block_two'> \n                                    <div className='block'>\n                                        <FormField\n                                            id={'name'}\n                                            formdata={this.state.formdata.name}\n                                            change={(element)=> this.updateForm(element)}\n                                        />                                      \n                                    </div>\n                                    <div className='block'>\n                                        <FormField\n                                            id={'lastname'}\n                                            formdata={this.state.formdata.lastname}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <FormField\n                                        id={'email'}\n                                        formdata={this.state.formdata.email}\n                                        change={(element)=> this.updateForm(element)}\n                                    />            \n                                </div>\n                                <h2>Veryify Password</h2>\n                                  <div className='form_block_two'> \n                                    <div className='block'>\n                                        <FormField\n                                            id={'password'}\n                                            formdata={this.state.formdata.password}\n                                            change={(element)=> this.updateForm(element)}\n                                        />                                      \n                                    </div>\n                                    <div className='block'>\n                                        <FormField\n                                            id={'confirmPassword'}\n                                            formdata={this.state.formdata.confirmPassword}\n                                            change={(element)=> this.updateForm(element)}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    { this.state.formError ?\n                                        <div className=\"error_label\">\n                                         Something went wrong, Please try again\n                                        </div>\n                                    :null}\n                                    <button type='button' onClick={(event)=> this.submitForm(event)}>\n                                        Create an account\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n                <Dialog open={this.state.formSuccess}>\n                    <div className='dialog_alert'>\n                        <div>\n                            Congratulations\n                        </div>\n                        <div>\n                            You will be redirected back to the signin in a couple of seconds\n                        </div>\n                    </div>\n\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default connect()(Register);","import React, { Component } from 'react';\nimport Axios from 'axios';\n\nclass AllPosts extends Component {\n\n    constructor(){\n        super();\n        this.state= {\n            articlePosts:[]\n        }\n    }\n\n    componentDidMount(){\n        this.getAllArticles();\n    }\n\n    getAllArticles = () =>{\n        // we are fetching the show all blog posts here through axios -- Only admins can access this post \n        Axios.get('/api/articles/show').then(response => {\n            // console.log(response)\n            this.setState({\n                articlePosts: response.data\n            })\n        })\n    }\n\n    // show one more post -- this will be very similar to how I did add a post... Should be easy to do, just need to grab it by it's id\n    // create a function that will request the post by its id\n    // create an initial state up top with each field I am looking for \n          \n    \n    render() {\n            const showAllPosts = this.state.articlePosts.map((articlePosts, i) => {\n                // console.log(articlePosts._id)\n                // now I need to return the form below, then I can render it again.. \n                const showMore = () => {\n                    // console.log(articleId, \"articleid\")\n\n                    // might throw this in redux, so I can grab the state at any page. I really have no fuckin idea what is going on, so I am going to take a break. night night\n                    Axios.get('/api/articles/show_by_id?id=' + articlePosts._id)\n                        .then(response => {\n                            console.log(response)\n                            if (response){\n                                setTimeout(() => {\n                                        this.props.history.push('/posts/show_by_id?id=' + articlePosts._id)\n                                }, 1000);\n                            }\n                        })\n            }\n                \n            return (\n                <div className = 'page_wrapper'\n                key = {i}>\n                    <div className='container'>\n                        <div className='homeContainer'>\n                            <div>\n                                <h1 className='postTitle'>{articlePosts.title}</h1>\n                                <p className='postBody'>\n                                    {articlePosts.body}\n                                </p> \n                                {/* <button className='buttonPost' id={articlePosts._id} type='button' onClick={(event)=> showMore(event)}>\n                                        Click to see comments \n                                </button>             */}\n                            </div>\n                            <div className='datePosted'>\n                                Date Posted: {articlePosts.date}\n                            </div>\n                            </div>\n                    </div>\n                </div> \n            );\n        })\n        return(\n            <div>\n                <div>\n                    {showAllPosts}\n                </div>\n                \n            </div>\n            \n        )\n    }\n}\n\nexport default AllPosts;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nconst links = [ \n    {\n        name: 'My account',\n        linkTo: '/user/dashboard'\n    },\n    {\n        name: 'User information',\n        linkTo: '/user/user_profile'\n    }\n]\n\n    const admin = [\n        {\n            name: 'Add a new post',\n            linkTo: '/admin/add_post'\n        },\n        {\n            name: 'Site Info',\n            linkTo: '/admin/site_info'\n        }\n    ]\n\nconst UserLayout = (props) => {\n\n    const generateLinks = (links) => (\n        links.map((item,i)=> (\n            <Link to={item.linkTo} key={i}>\n                {item.name}\n            </Link>\n        ))\n    )\n    \n    return (\n        <div className='container'>\n            <div className='user_container'>\n                <div className='user_left_nav'>   \n                    <h2>My Account</h2> \n                        <div className='links'>\n                            {generateLinks(links)}\n                        </div>\n                        {\n                            props.user.userData.isAdmin ?\n                            <div>\n                                <h2>Admin</h2>\n                                <div className='links'>\n                                {generateLinks(admin)}\n                        </div>\n                            </div>\n                            :null\n                        }\n                    </div>\n                    <div className='user_right'>\n                        {props.children}\n                    </div>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    }\n}\n\nexport default connect(mapStateToProps)(UserLayout);","import axios from 'axios';\n\nimport { ADD_POST, GET_ALL_POSTS } from './types';\nimport {\n    ARTICLES_SERVER\n} from '../Components/utils/misc';\n\nexport function addPost(datatoSubmit) {\n\n    const request = axios.post(`${ARTICLES_SERVER}/new`, datatoSubmit)\n        .then(response => response.data);\n\n    return {\n        type: ADD_POST,\n        payload: request\n    }\n}\n\n// export function getPostById(datatoSubmit){\n//     const request = axios.get(`${ARTICLES_SERVER}/show_by_id?_id=`)\n// }\n\n   export function getAllPosts() {\n        // we are fetching the show all blog posts here through axios -- Only admins can access this post \n        const request = axios.get(`${ARTICLES_SERVER}/show`)\n        .then(response => response.data)\n        return {\n            type: GET_ALL_POSTS,\n            payload: request\n        }\n    }\n","import React, { Component } from 'react';\nimport UserLayout from '../../../hoc/user';\n\nimport FormField from '../../utils/Forms/formfield';\nimport { update, generateData, isFormValid } from '../../utils/Forms/formActions';\n\nimport {connect} from 'react-redux';\nimport {addPost} from '../../../actions/post_actions'\n\nclass AddPost extends Component {\n\n    state = {\n        formError: false,\n        formSuccess: false,\n        formdata: {\n            title: {\n                element: 'input',\n                value: '',\n                config: {\n                    label: 'Title of your post',\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'Title'\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: '',\n                showLabel: true\n            },\n            body: {\n                element: 'textarea',\n                value: '',\n                config: {\n                    label: 'Content of the POST',\n                    name: 'body_input',\n                    type: 'text',\n                    placeholder: 'Body'\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: '',\n                showLabel: true\n            },\n            image: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'image_input',\n                    type: 'text',\n                    placeholder: 'image URL'\n                },\n                validation: {\n                    required: false,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: '',\n                showLabel: true\n            },\n            date: {\n                element: 'input',\n                value: '',\n                config: {\n                    name: 'name_input',\n                    type: 'text',\n                    placeholder: 'date'\n                },\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false,\n                validationMessage: '',\n                showLabel: true\n            }\n        }\n    }\n\n    updateForm = (element) => {\n        const newFormdata = update(element,this.state.formdata,'posts');\n        this.setState({\n            formError: false,\n            formdata: newFormdata\n        })\n    }\n    \n    submitForm= (event) =>{\n        event.preventDefault();\n        console.log('click click')\n        \n        let dataToSubmit = generateData(this.state.formdata,'posts');\n        let formIsValid = isFormValid(this.state.formdata,'posts');\n        console.log(dataToSubmit)\n\n        if(formIsValid){\n            this.props.dispatch(addPost(dataToSubmit))\n            .then(response => {\n                if (response.payload.success){\n                    this.setState({\n                        formError: false,\n                        formSuccess: true\n                    });\n                    setTimeout(() => {\n                            this.props.history.push('/')\n                    }, 2000);\n                } else{\n                    this.setState({formError: true})\n            }\n        })\n    }\n}\n\n    render() {\n        return (\n            <UserLayout>\n                <div>\n                   <div>\n                       <h1>Add new Post</h1>\n                       <form onSubmit={(event)=> this.submitForm(event)}>\n                        <FormField\n                            id={'title'}\n                            formdata={this.state.formdata.title}\n                            change={(element)=> this.updateForm(element)}\n                        />\n\n                        <FormField\n                            id={'body'}\n                            formdata={this.state.formdata.body}\n                            change={(element)=> this.updateForm(element)}\n                        />\n\n                        <FormField\n                            id={'image'}\n                            formdata={this.state.formdata.image}\n                            change={(element)=> this.updateForm(element)}\n                        />\n\n                        <FormField\n                            id={'date'}\n                            formdata={this.state.formdata.date}\n                            change={(element)=> this.updateForm(element)}\n                        />\n                        <button type='button' onClick={(event)=> this.submitForm(event)}>\n                                Submit a new post\n                        </button>\n                       </form>\n                   </div>\n                </div>\n            </UserLayout>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        article: state.article\n    }\n}\n\nexport default connect(mapStateToProps)(AddPost);","// articlePosts\n\nimport React from 'react';\n\nconst showPost = () => {\n    return (\n        <div>\n            a ha ha\n        </div>\n    );\n};\n\nexport default showPost;","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel'\n\n\nconst Logout = () => {\n    return (\n    <Carousel>\n        <Carousel.Item>\n            <img\n            className=\"d-block w-100\"\n            src = \"https://i.imgur.com/jq6UcwG.jpg slide&bg=373940\"\n            alt=\"First slide\"\n            />\n            <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n            </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n            <img\n            className=\"d-block w-100\"\n            src=\"https://i.imgur.com/F4cFWoJ.jpg slide&bg=282c34\"\n            alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n            </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n            <img\n            className=\"d-block w-100\"\n            src=\"https://i.imgur.com/7gDwSUf.jpg slide&bg=20232a\"\n            alt=\"Third slide\"\n            />\n\n            <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n            </Carousel.Caption>\n        </Carousel.Item>\n</Carousel>\n    );\n};\n\nexport default Logout;","import React from 'react';\nimport UserLayout from '../../hoc/user';\nimport MyButton from '../utils/button';\n\nconst UserDashboard = ({user}) => {\n    return (\n        <UserLayout>\n            <div>\n                \n                <div className=\"user_nfo_panel\">\n                    <h1>User information</h1>\n                    <div>\n                        <span>{user.userData.name}</span>\n                        <span>{user.userData.lastname}</span>\n                        <span>{user.userData.email}</span>\n                    </div>\n                    <MyButton\n                        type=\"default\"\n                        title=\"Edit account info\"\n                        linkTo=\"/user/user_profile\"\n                    />\n                </div>\n                \n            </div>\n        </UserLayout>\n        \n    );\n};\n\nexport default UserDashboard;","import React from 'react';\nimport {Switch, Route } from 'react-router-dom';\n\nimport RegisterLogin from './Components/Register_login'\nimport Home from './Components/Home';\nimport Layout from './hoc/layout';\nimport Auth from './hoc/auth'\nimport About from './Components/About';\nimport Register from  './Components/Register_login/register';\nimport AllPosts from './Components/Posts';\nimport AddPost from './Components/User/Admin/add_post';\nimport showPost from './Components/Posts/showPost';\nimport Logout from './Components/Logout/logout'\n\nimport UserDashboard from './Components/User';\n\nconst Routes = () => {\n  return(\n    <Layout>\n      <Switch>\n        <Route path='/user/dashboard' exact component={ Auth(UserDashboard, true) }/>\n        <Route path='/admin/add_post' exact component={ Auth(AddPost, true) }/>\n\n        <Route path='/posts/show_by_id?id=_id' exact component={Auth(showPost, false) } />\n        <Route path='/register_login' exact component={ Auth(RegisterLogin, false) }/>\n        <Route path='/register' exact component={ Auth(Register, false) }/>\n        <Route path='/' exact component={ Auth(Home, null) }/>\n        <Route path='/about' exact component={Auth(About, null)}/>\n        <Route path='/posts' exact component={Auth (AllPosts, null)} />\n        <Route path='/logout' exact component={Auth (Logout, null)} />\n      </Switch>\n    </Layout>\n    \n  )\n}\n\nexport default Routes;\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\nimport article from './post_reducer'\n\nconst rootReducer = combineReducers({\n    user,\n    article\n})\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER\n} from '../actions/types'\n\nexport default function(state={}, action){\n    switch(action.type){\n        case REGISTER_USER:\n            return{...state, register: action.payload}\n        case LOGIN_USER:\n            return{...state, loginSuccess: action.payload}\n        case AUTH_USER:\n            return{...state, userData: action.payload}\n        case LOGOUT_USER:\n            return{...state}\n        default: \n            return state; \n    }\n}\n\n","import {\n   ADD_POST,\n   GET_ALL_POSTS\n} from '../actions/types';\n\nexport default function(state={}, action){\n    switch(action.type){\n        case ADD_POST:\n            return {...state, addPost: action.payload}\n        case GET_ALL_POSTS:\n            return{...state, getAllPosts: action.payload}\n        default: \n            return state; \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Resources/css/styles.css';\n\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './routes';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware }from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nimport Reducer from './reducers'\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore)\n\nReactDOM.render(\n    <Provider store={createStoreWithMiddleware(Reducer, \n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}